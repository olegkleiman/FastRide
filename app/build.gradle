import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.model.application'

model {

    compileOptions.with {
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    }

    android {
        compileSdkVersion = 'Google Inc.:Google APIs:22'
        buildToolsVersion = "22.0.1"
        packagingOptions.excludes = ['LICENSE.txt']

        defaultConfig.with {
            applicationId = "com.maximum.fastride"
            minSdkVersion.apiLevel = 16
            targetSdkVersion.apiLevel = 22
            versionCode = 3
            versionName = '1.3'
            multiDexEnabled = true

            testApplicationId = "com.maximum.fastride.tests"
            //testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
            testInstrumentationRunner = "android.test.InstrumentationTestRunner"
        }
    }

    android.ndk {
        moduleName = "fastcvUtils"

        abiFilters += ["armeabi", "armeabi-v7a"]

//        toolchain = "clang"
//        toolchainVersion = "3.5"

        // Link with static OpenCV libraries: the order is important!
        // The following order taken from OpenCV.mk
        def opencv_modules = ["shape", "stitching", "objdetect", "superres", "videostab", "calib3d", "features2d", "highgui", "videoio", "imgcodecs", "video", "photo", "ml", "imgproc", "flann", "core", "hal", "tbb"]

        ldLibs += ["log","stdc++","dl", "z", "jnigraphics"]

        abiFilters.each { targetAbi ->
            println targetAbi

            opencv_modules.each{ module ->
                if( module.equals("tbb")) {
                    ldLibs += file(projectDir).absolutePath + "/src/main/jniLibs/" + targetAbi +"/lib" + module + ".a"
                } else {
                    ldLibs += file(projectDir).absolutePath + "/src/main/jniLibs/" + targetAbi + "/libopencv_" + module + ".a"
                }
            }
        }

        cppFlags   += "-Werror"
        cppFlags   += "--debug"
        cppFlags   += "-frtti"
        cppFlags   += "-fexceptions"
        cppFlags   += "-D_DEBUG"

        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            def opencvhome = System.getenv("OPENCV_HOME")
            cppFlags += "-I" + opencvhome + "\\native\\jni\\include"
        } else {
            cppFlags += "-I/Users/Oleg/Downloads/OpenCV-android-sdk/sdk/native/jni/include"
        }
        cppFlags    += "-std=c++11" // for lambda-expressions

        //CFlags      += "-D_DEBUG"

        stl = "gnustl_static"

    }

    android.buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles += file('proguard-rules.pro')
            isJniDebuggable = true
            isDebuggable = true
        }

        debug {
            isJniDebuggable = true
            isDebuggable = true
        }
    }

    android.productFlavors {

        create("arm") {
            ndk.with {

                abiFilters += "armeabi"
                println "*** building for arm"
            }

        }

        create("armv7") {
            ndk.with {

                abiFilters += "armeabi-v7a"
                println "*** building for armv7"
            }

        }

        create("x86") {
            ndk.with {
                abiFilters += "x86"
                println "*** building for x86"
            }
        }
    }

//    components.android {
//        binaries.afterEach { binary ->
//            println "Binary: " + binary.name
//            binary.mergedNdkConfig.cppFlags.add("-std=c++11")
//        }
//    }

//    dexOptions {
//        javaMaxHeapSize = "4g"
//    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:support-v4:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    compile 'com.android.support:recyclerview-v7:22.2.1'
    //    // Unit testing dependencies
    //androidTestCompile 'junit:junit:4.12'
    compile files('libs/mobileservices-2.0.1-beta.jar')
    //compile 'com.microsoft.azure:azure-mobile-services-android-sdk:2.0.2+'
    //compile files('libs/notifications-1.0.1.jar')
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.microsoft.azure.android:azure-storage-android:0.6.0@aar'
    compile 'com.google.guava:guava:18.0'
    compile 'com.facebook.android:facebook-android-sdk:3.21.1'
    //compile 'com.facebook.android:facebook-android-sdk:4.0.0'
    // See here: https://developers.google.com/android/guides/setup
    // for detailed discussion about setting up GMS
    compile 'com.google.android.gms:play-services-location:7.5.0'
    compile 'com.google.android.gms:play-services-gcm:7.5.0'
    // GPlus is incompatible with facebook 3.21.1
    // -- causes 'NoClassDefFoundError: android.support.v7.appcompat.R$layout' exception
    //compile 'com.google.android.gms:play-services-plus:7.5.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.afollestad:material-dialogs:0.7.8.1'
    compile 'org.apache.commons:commons-math3:3.2'
    compile project(':libraries:opencv')
    compile project(':libraries:faceapilibrary')
}

